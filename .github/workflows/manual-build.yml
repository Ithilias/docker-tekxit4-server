name: build

on:
  workflow_dispatch:

permissions:
  contents: write
  packages: write

jobs:
  manual-build:
    name: Build and publish Docker images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Current Version
        run: echo "CURRENT_VERSION=$(grep -oP '(?<=\bVERSION=")[^"]+' ./Dockerfile)" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ env.CURRENT_VERSION }}
            type=raw,value=latest

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and publish image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event.pull_request.head.repo.full_name == 'Ithilias/docker-tekxit4-server' || github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            REVISION=${{ github.sha }}
            VERSION=${{ env.CURRENT_VERSION }}
          cache-to: type=gha
          cache-from: type=gha

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
